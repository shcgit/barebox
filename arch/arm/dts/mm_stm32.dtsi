#include "stm32mp151.dtsi"

#include <dt-bindings/input/input.h>

/*
 * GPIO EXTI IRQs
 * 0	pmic@33
 * 1	matrix-keypad row 2
 * 4	matrix-keypad row 3
 * 5	can@2
 * 6	matrix-keypad row 0
 * 7	matrix-keypad row 1
 * 10	TS IRQ (PF10)
 * 12	gpio@23
 * 13	gpio@21
 * 15	can@1
 */

/ {
	model = "Mega-Milas Informer STM32";
	compatible = "milas,informer-stm32", "myir,myd-ya151c-t", "st,stm32mp151";

	aliases {
		i2c0 = &i2c1;
		serial1 = &uart5;
		serial2 = &usart1;
		serial3 = &usart3;
	};

	beeper {
		compatible = "gpio-beeper";
		gpios = <&hwrev 5 GPIO_ACTIVE_HIGH>;
	};

	gpio-keys {
		compatible = "gpio-keys";

		/* 4 - SOUND_WORLD (Informer) */

		/* SHIFT/REVERSE (Informer) */
		key@5 {
			label = "SHIFT";
			linux,code = <SW_LID>;
			linux,input-type = <EV_SW>;
			gpios = <&input 5 GPIO_ACTIVE_LOW>;
		};

		key@6 {
			label = "PF_LOW";
			linux,code = <SW_TABLET_MODE>;
			linux,input-type = <EV_SW>;
			debounce-interval = <0>;
			gpios = <&input 6 GPIO_ACTIVE_LOW>;
		};

		key@7 {
			label = "PF_HIGH";
			linux,code = <SW_HEADPHONE_INSERT>;
			linux,input-type = <EV_SW>;
			debounce-interval = <0>;
			gpios = <&input 7 GPIO_ACTIVE_LOW>;
		};
	};

	matrix-keypad {
		compatible = "gpio-matrix-keypad";
		debounce-delay-ms = <10>;
		col-scan-delay-us = <50>;
		gpio-activelow;
		wakeup-source;

		row-gpios = <
			&gpioc 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)
			&gpioc 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)
			&gpioe 1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)
			&gpioe 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)
		>;

		col-gpios = <
			&gpiof 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)
			&gpioe 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)
			&gpiob 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)
			&gpioa 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)
			&gpioa 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)
			&gpiob 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)
		>;

		linux,keymap = <
			MATRIX_KEY(0,0,0x0200)
			MATRIX_KEY(0,1,0x0201)
			MATRIX_KEY(0,2,0x0202)
			MATRIX_KEY(0,3,0x0203)
			MATRIX_KEY(0,4,0x0204)
			MATRIX_KEY(0,5,0x0205)
			MATRIX_KEY(1,0,0x0210)
			MATRIX_KEY(1,1,0x0211)
			MATRIX_KEY(1,2,0x0212)
			MATRIX_KEY(1,3,0x0213)
			MATRIX_KEY(1,4,0x0214)
			MATRIX_KEY(1,5,0x0215)
			MATRIX_KEY(2,0,0x0220)
			MATRIX_KEY(2,1,0x0221)
			MATRIX_KEY(2,2,0x0222)
			MATRIX_KEY(2,3,0x0223)
			MATRIX_KEY(2,4,0x0224)
			MATRIX_KEY(2,5,0x0225)
			MATRIX_KEY(3,0,0x0230)
			MATRIX_KEY(3,1,0x0231)
			MATRIX_KEY(3,2,0x0232)
			MATRIX_KEY(3,3,0x0233)
			MATRIX_KEY(3,4,0x0234)
			MATRIX_KEY(3,5,0x0235)
		>;
	};

	sound {
		compatible = "simple-audio-card";
		simple-audio-card,format = "i2s";
		simple-audio-card,bitclock-master = <&master_codec>;
		simple-audio-card,frame-master = <&master_codec>;
		simple-audio-card,name = "SAI1SGTL5000";

		simple-audio-card,cpu {
			sound-dai = <&sai1b>;
		};

		master_codec: simple-audio-card,codec {
			sound-dai = <&sgtl5000>;
		};
	};

	vdd_1v8: regulator-vdd-1v8 {
		compatible = "regulator-fixed";
		regulator-name = "vdd-1v8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
		regulator-boot-on;
		vin-supply = <&vdd_3v3>;
	};

	vdd_usb1: regulator-vdd-usb1 {
		compatible = "regulator-fixed";
		regulator-name = "vdd_usb1";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpioz 6 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		vin-supply = <&vin>;
	};
};

&backlight {
	pwms = <&pwm2 3 100000 0>;
	num-interpolated-steps = <16>;
	default-brightness-level = <0>;
};

&i2c1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c1_pins_b>;
	pinctrl-1 = <&i2c1_sleep_pins_b>;
	clock-frequency = <400000>;
	status = "okay";

	pwm@2c {
		compatible = "intersil,isl97671a";
		reg = <0x2c>;
	};

	dispver: gpio@41 {
		compatible = "nxp,pca9536";
		reg = <0x41>;
		gpio-controller;
		
		#gpio-cells = <2>;
	};
};

&i2c2 {
	/delete-node/ gpio@20;
	/delete-node/ usb@28;
	/delete-node/ rtc@32;

	sgtl5000: audio-codec@a {
		pinctrl-names = "default";
		pinctrl-0 = <&mco2_pins>;
		compatible = "fsl,sgtl5000";
		reg =<0xa>;
		clocks = <&rcc CK_MCO2>;
		micbias-resistor-k-ohms = <0>;
		VDDA-supply = <&vdd_3v3>;
		VDDIO-supply = <&vdd_3v3>;
		VDDD-supply = <&vdd_1v8>;

		#sound-dai-cells = <0>;
	};

	hwrev: gpio@20 {
		compatible = "nxp,pca9534";
		reg = <0x20>;
		gpio-controller;

		#gpio-cells = <2>;
	};

	input: gpio@21 {
		pinctrl-names = "default";
		pinctrl-0 = <&pca9534_0_pins>;
		compatible = "nxp,pca9534";
		reg = <0x21>;
		gpio-controller;
		interrupt-parent = <&gpiof>;
		interrupts = <13 IRQ_TYPE_EDGE_BOTH>;
		interrupt-controller;

		#gpio-cells = <2>;
		#interrupt-cells = <2>;
	};

	board_out: gpio@22 {
		compatible = "nxp,pca9535";
		reg = <0x22>;
		gpio-controller;

		#gpio-cells = <2>;
	};

	board_in: gpio@23 {
		pinctrl-names = "default";
		pinctrl-0 = <&pca9534_1_pins>;
		compatible = "nxp,pca9534";
		reg = <0x23>;
		gpio-controller;
		interrupt-parent = <&gpiof>;
		interrupts = <12 IRQ_TYPE_EDGE_BOTH>;
		interrupt-controller;

		#gpio-cells = <2>;
		#interrupt-cells = <2>;
	};
};

&leds {
	usb-led {
		label = "board:usb";
		gpios = <&hwrev 7 GPIO_ACTIVE_LOW>;
		color = <LED_COLOR_ID_RED>;
		default-state = "off";
		function = LED_FUNCTION_USB;
		linux,default-trigger = "usb-host";
	};
};

&led_live {
	color = <LED_COLOR_ID_RED>;
	gpios = <&hwrev 6 GPIO_ACTIVE_LOW>;
};

&nand_parts {
	/delete-node/ partition@1200000;

	partition@1200000 {
		label = "env";
		reg = <0x1200000 0x80000>;
	};

	partition@1280000 {
		label = "system";
		reg = <0x01280000 0>;
	};
};

&panel {
	compatible = "panel-dpi";
	height-mm = <0>;
	width-mm = <0>;

	panel-timing {
		/* PH320240T */
		clock-frequency = <6400000>;
		hactive = <320>;
		vactive = <240>;
		hback-porch = <38>;
		hfront-porch = <20>;
		hsync-len = <30>;
		vback-porch = <15>;
		vfront-porch = <5>;
		vsync-len = <1 3 5>;
		hsync-active = <0>;
		vsync-active = <0>;
		de-active = <1>;
	};
};

&pmic {
	/delete-node/ onkey;
};

&rcc {
	assigned-clocks = <&rcc CK_MCO1>, <&rcc CK_MCO2>;
	assigned-clock-rates = <16000000>, <24000000>;
	assigned-clock-parents = <&rcc CK_HSI>, <&rcc CK_HSE>;
};

&sdmmc1 {
	/delete-property/ pinctrl-1;
	/delete-property/ pinctrl-2;
	/delete-property/ cd-gpios;
	pinctrl-names = "default";
	pinctrl-0 = <&sdmmc1_pins>;
	bus-width = <1>;
};

&spi5 {
	cs-gpios = <&gpioh 5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
		   <&gpioz 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
		   <&gpioc 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;

	gpio@0 {
		compatible = "fairchild,74hc595";
		reg = <0>;
		spi-max-frequency = <4000000>;
		registers-number = <2>;
		gpio-controller;
		#gpio-cells = <2>;
	};

	can@1 {
		pinctrl-names = "default";
		pinctrl-0 = <&mcp2515_0_pins>;
		compatible = "microchip,mcp2515";
		reg = <1>;
		spi-max-frequency = <10000000>;
		clocks = <&rcc CK_MCO1>;
		interrupt-parent = <&gpioa>;
		interrupts = <15 IRQ_TYPE_EDGE_FALLING>;
	};

	can@2 {
		pinctrl-names = "default";
		pinctrl-0 = <&mcp2515_1_pins>;
		compatible = "microchip,mcp2515";
		reg = <2>;
		spi-max-frequency = <10000000>;
		clocks = <&rcc CK_MCO1>;
		interrupt-parent = <&gpiof>;
		interrupts = <5 IRQ_TYPE_EDGE_FALLING>;
	};
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart5_pins_a>;
	status = "okay";
};

&usart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&usart1_pins_z>;
	rts-gpios = <&gpioa 12 (GPIO_ACTIVE_HIGH | GPIO_PUSH_PULL)>;
	linux,rs485-enabled-at-boot-time;
	status = "okay";
};

&usart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&usart3_pins>;
	rts-gpios = <&gpiog 8 (GPIO_ACTIVE_HIGH | GPIO_PUSH_PULL)>;
	linux,rs485-enabled-at-boot-time;
	status = "okay";
};

&usbh_ehci {
	status = "disabled";
};

&usbotg_hs {
	/delete-property/ usb-role-switch;

	pinctrl-names = "default";
	pinctrl-0 = <&usbotg_hs_pins_a>;
	dr_mode = "host";

	port {
		/delete-node/ endpoint;
	};
};

&usbphyc_port1 {
	connector {
		compatible = "usb-a-connector";
		vbus-supply = <&vdd_usb1>;
	};
};

&pinctrl {
	pinctrl-names = "default";
	pinctrl-0 = <&mco1_pins &ts_pins>;

	ltdc_pins: ltdc-0 {
		pins {
			pinmux = <STM32_PINMUX('G',  7, AF14)>,		/* LCD_CLK */
				 <STM32_PINMUX('I', 10, AF14)>,		/* LCD_HSYNC */
				 <STM32_PINMUX('I',  9, AF14)>,		/* LCD_VSYNC */
				 <STM32_PINMUX('E', 13, AF14)>,		/* LCD_DE */
				 <STM32_PINMUX('H',  9, AF14)>,		/* LCD_R3 */
				 <STM32_PINMUX('H', 10, AF14)>,		/* LCD_R4 */
				 <STM32_PINMUX('H', 11, AF14)>,		/* LCD_R5 */
				 <STM32_PINMUX('H', 12, AF14)>,		/* LCD_R6 */
				 <STM32_PINMUX('E', 15, AF14)>,		/* LCD_R7 */
				 <STM32_PINMUX('H', 13, AF14)>,		/* LCD_G2 */
				 <STM32_PINMUX('H', 14, AF14)>,		/* LCD_G3 */
				 <STM32_PINMUX('H', 15, AF14)>,		/* LCD_G4 */
				 <STM32_PINMUX('I',  0, AF14)>,		/* LCD_G5 */
				 <STM32_PINMUX('I',  1, AF14)>,		/* LCD_G6 */
				 <STM32_PINMUX('I',  2, AF14)>,		/* LCD_G7 */
				 <STM32_PINMUX('D', 10, AF14)>,		/* LCD_B3 */
				 <STM32_PINMUX('I',  4, AF14)>,		/* LCD_B4 */
				 <STM32_PINMUX('I',  5, AF14)>,		/* LCD_B5 */
				 <STM32_PINMUX('I',  6, AF14)>,		/* LCD_B6 */
				 <STM32_PINMUX('I',  7, AF14)>;		/* LCD_B7 */
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};
	};

	ltdc_sleep_pins: ltdc-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('G',  7, ANALOG)>,	/* LCD_CLK */
				 <STM32_PINMUX('I', 10, ANALOG)>,	/* LCD_HSYNC */
				 <STM32_PINMUX('I',  9, ANALOG)>,	/* LCD_VSYNC */
				 <STM32_PINMUX('E', 13, ANALOG)>,	/* LCD_DE */
				 <STM32_PINMUX('H',  9, ANALOG)>,	/* LCD_R3 */
				 <STM32_PINMUX('H', 10, ANALOG)>,	/* LCD_R4 */
				 <STM32_PINMUX('H', 11, ANALOG)>,	/* LCD_R5 */
				 <STM32_PINMUX('H', 12, ANALOG)>,	/* LCD_R6 */
				 <STM32_PINMUX('E', 15, ANALOG)>,	/* LCD_R7 */
				 <STM32_PINMUX('H', 13, ANALOG)>,	/* LCD_G2 */
				 <STM32_PINMUX('H', 14, ANALOG)>,	/* LCD_G3 */
				 <STM32_PINMUX('H', 15, ANALOG)>,	/* LCD_G4 */
				 <STM32_PINMUX('I',  0, ANALOG)>,	/* LCD_G5 */
				 <STM32_PINMUX('I',  1, ANALOG)>,	/* LCD_G6 */
				 <STM32_PINMUX('I',  2, ANALOG)>,	/* LCD_G7 */
				 <STM32_PINMUX('D', 10, ANALOG)>,	/* LCD_B3 */
				 <STM32_PINMUX('I',  4, ANALOG)>,	/* LCD_B4 */
				 <STM32_PINMUX('I',  5, ANALOG)>,	/* LCD_B5 */
				 <STM32_PINMUX('I',  6, ANALOG)>,	/* LCD_B6 */
				 <STM32_PINMUX('I',  7, ANALOG)>;	/* LCD_B7 */
		};
	};

	mco1_pins: mco1-0 {
		pins {
			pinmux = <STM32_PINMUX('I', 11, AF0)>;		/* MCO1 */
			bias-disable;
			drive-push-pull;
			slew-rate = <2>;
		};
	};

	mco2_pins: mco2-0 {
		pins {
			pinmux = <STM32_PINMUX('C', 12, AF1)>;		/* MCO2 */
			bias-disable;
			drive-push-pull;
			slew-rate = <2>;
		};
	};

	mcp2515_0_pins: mcp2515-0 {
		pins {
			pinmux = <STM32_PINMUX('A', 15, ANALOG)>;	/* MCP2515 CS1 IRQ */
			bias-pull-up;
		};
	};

	mcp2515_1_pins: mcp2515-1 {
		pins {
			pinmux = <STM32_PINMUX('F', 5, ANALOG)>;	/* MCP2515 CS2 IRQ */
			bias-pull-up;
		};
	};

	pca9534_0_pins: pca9534-0 {
		pins {
			pinmux = <STM32_PINMUX('F', 13, ANALOG)>;	/* PCA9534@21 IRQ */
			bias-pull-up;
		};
	};

	pca9534_1_pins: pca9534-1 {
		pins {
			pinmux = <STM32_PINMUX('F', 12, ANALOG)>;	/* PCA9534@23 IRQ */
			bias-pull-up;
		};
	};

	sdmmc1_pins: sdmmc1-0 {
		pins1 {
			pinmux = <STM32_PINMUX('C', 8, AF12)>,		/* SDMMC1_D0 */
				 <STM32_PINMUX('D', 2, AF12)>;		/* SDMMC1_CMD */
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('C', 12, AF12)>;		/* SDMMC1_CK */
			bias-disable;
			drive-push-pull;
			slew-rate = <2>;
		};
	};

	tim2_pwm_pins: tim2-pwm-0 {
		pins {
			pinmux = <STM32_PINMUX('A', 3, AF1)>;		/* TIM2_CH4 */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	tim2_pwm_sleep_pins: tim2-pwm-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('A', 3, ANALOG)>;	/* TIM2_CH4 */
		};
	};

	ts_pins: ts-0 {
		pins {
			pinmux = <STM32_PINMUX('F', 10, ANALOG)>;	/* TS IRQ */
		};
	};

	usart3_pins: usart3-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 8, AF7)>;		/* USART3_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('B', 12, AF8)>;		/* USART3_RX */
			bias-disable;
		};
	};
};

&pinctrl_z {
	usart1_pins_z: usart1-0 {
		pins1 {
			pinmux = <STM32_PINMUX('Z', 2, AF7)>;		/* USART1_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('Z', 1, AF7)>;		/* USART1_RX */
			bias-disable;
		};
	};
};
